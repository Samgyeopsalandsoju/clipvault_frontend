# .github/workflows/main.yml
name: Deploy to AWS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: s3-clipvault
  CODE_DEPLOY_APPLICATION_NAME: clipvault-frontend # CodeDeploy에서 생성한 애플리케이션 이름
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: clipvault-frontend # CodeDeploy에서 생성한 배포 그룹 이름

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build

      - name: Get short Git SHA
        run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Create deployment package
        run: |
          mkdir -p deploy-package
          # .next 디렉토리 확인
          ls -la .next || echo ".next directory is missing!"
          # 강제로 모든 파일 복사 (숨겨진 파일 포함)
          cp -ra .next deploy-package/ || echo "Failed to copy .next"
          cp ecosystem.config.js deploy-package/
          cp -r public deploy-package/
          cp -r scripts deploy-package/
          cp package.json deploy-package/
          cp appspec.yml deploy-package/
          # 복사된 파일 확인
          ls -la deploy-package/
          cd deploy-package && zip -qq -r ../frontend-build-${{ env.GIT_SHA }}.zip .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: |
          aws s3 cp --region ap-northeast-2 ./frontend-build-${{ env.GIT_SHA }}.zip s3://${{ env.S3_BUCKET_NAME }}/frontend/frontend-build-${{ env.GIT_SHA }}.zip

      - name: Start CodeDeploy Deployment
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=${{ env.S3_BUCKET_NAME }},bundleType=zip,key=frontend/frontend-build-${{ env.GIT_SHA }}.zip
