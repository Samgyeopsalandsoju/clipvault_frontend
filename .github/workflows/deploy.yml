# .github/workflows/main.yml
name: Deploy to AWS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: s3-clipvault
  CODE_DEPLOY_APPLICATION_NAME: clipvault-frontend # CodeDeploy에서 생성한 애플리케이션 이름
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: clipvault-frontend # CodeDeploy에서 생성한 배포 그룹 이름

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build

      - name: Get short Git SHA
        run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Create deployment package
        run: |
          mkdir -p deploy-package

          # .next 디렉토리 존재 여부 확인
          echo "\nChecking .next directory:"
          ls -la .next || echo ".next directory is missing!"

          # deploy-package에 파일 복사
          echo "\nCopying files to deploy-package..."
          cp -ra .next deploy-package/ || echo "Failed to copy .next"
          cp ecosystem.config.js deploy-package/
          cp -r public deploy-package/
          cp -r scripts deploy-package/
          cp package.json deploy-package/
          cp appspec.yml deploy-package/

          # deploy-package 디렉토리 내용 확인
          echo "\nDeploy package contents:"
          ls -la deploy-package/

          # zip 파일 생성하고 내용 확인 (verbose 모드)
          cd deploy-package && zip -v -r ../frontend-build-${{ env.GIT_SHA }}.zip .

          # 생성된 zip 파일 내용 확인
          cd ..
          echo "\nZip file contents:"
          unzip -l frontend-build-${{ env.GIT_SHA }}.zip
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: |
          echo "Checking zip file contents before upload:"
          unzip -l frontend-build-${{ env.GIT_SHA }}.zip         
          echo "\nUploading to S3 with debug logging:"
          aws s3 cp --debug \
          frontend-build-${{ env.GIT_SHA }}.zip \
          s3://${{ env.S3_BUCKET_NAME }}/frontend/frontend-build-${{ env.GIT_SHA }}.zip
          echo "\nVerifying uploaded file in S3:"
          aws s3 ls s3://${{ env.S3_BUCKET_NAME }}/frontend/frontend-build-${{ env.GIT_SHA }}.zip

      - name: Start CodeDeploy Deployment
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=${{ env.S3_BUCKET_NAME }},bundleType=zip,key=frontend/frontend-build-${{ env.GIT_SHA }}.zip
